// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(ReferralDbContext))]
    [Migration("20250202144722_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.12");

            modelBuilder.Entity("Data.Referral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReferralCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReferredUser")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReferrerUserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Referral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 2, 2, 14, 47, 22, 610, DateTimeKind.Utc).AddTicks(7942),
                            ReferralCode = "XY7G4D",
                            ReferrerUserId = "janedoe@nothingspecific.com",
                            Status = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 2, 2, 14, 47, 22, 610, DateTimeKind.Utc).AddTicks(7946),
                            ReferralCode = "AB8H5E",
                            ReferrerUserId = "johndoe@nothingspecific.com",
                            Status = "Pending"
                        });
                });

            modelBuilder.Entity("Data.ReferralReports", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ReferralId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReportedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ReferralId");

                    b.ToTable("ReferralReports");
                });

            modelBuilder.Entity("Data.ReferralTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ClickedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ReferralId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ReferralId");

                    b.ToTable("ReferralTracking");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClickedAt = new DateTime(2025, 2, 2, 14, 47, 22, 610, DateTimeKind.Utc).AddTicks(8055),
                            DeviceId = "device001",
                            ReferralId = 1,
                            Source = "SMS"
                        },
                        new
                        {
                            Id = 2,
                            ClickedAt = new DateTime(2025, 2, 2, 14, 47, 22, 610, DateTimeKind.Utc).AddTicks(8056),
                            DeviceId = "device002",
                            ReferralId = 2,
                            Source = "Email"
                        });
                });

            modelBuilder.Entity("Data.ReferralReports", b =>
                {
                    b.HasOne("Data.Referral", "Referral")
                        .WithMany("ReferralReports")
                        .HasForeignKey("ReferralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Referral");
                });

            modelBuilder.Entity("Data.ReferralTracking", b =>
                {
                    b.HasOne("Data.Referral", "Referral")
                        .WithMany("Clicks")
                        .HasForeignKey("ReferralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Referral");
                });

            modelBuilder.Entity("Data.Referral", b =>
                {
                    b.Navigation("Clicks");

                    b.Navigation("ReferralReports");
                });
#pragma warning restore 612, 618
        }
    }
}
